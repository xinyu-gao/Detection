server:
  port: 12345

spring:
  #  datasource:
  #    # 使用阿里的 Druid 连接池
  #    type: com.alibaba.druid.pool.DruidDataSource
  #    # mysql 驱动
  ##    driver-class-name: com.mysql.cj.jdbc.Driver
  ##    # 数据库的url、登录名、密码和数据库名
  ##    url: jdbc:mysql://175.24.147.229:3306/detection?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8
  ##    username: root
  ##    password: yu1119..
  #    # 连接池的配置信息
  #    druid:
  #      # 初始化大小，最小，最大
  #      initial-size: 5
  #      min-idle: 5
  #      maxActive: 20
  #      # 配置获取连接等待超时的时间
  #      maxWait: 60000
  #      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
  #      timeBetweenEvictionRunsMillis: 60000
  #      # 配置一个连接在池中最小生存的时间，单位是毫秒
  #      minEvictableIdleTimeMillis: 300000
  #      validationQuery: SELECT 1
  #      testWhileIdle: true
  #      testOnBorrow: false
  #      testOnReturn: false
  #      # 打开 PSCache，并且指定每个连接上 PSCache 的大小
  #      poolPreparedStatements: true
  #      maxPoolPreparedStatementPerConnectionSize: 20
  #      # 配置监控统计拦截的 filters，去掉后监控界面 sql 无法统计，'wall'用于防火墙
  #      filters: stat,wall,slf4j
  #      # 通过 connectProperties 属性来打开 mergeSql 功能；慢 SQL 记录
  #      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
  #      # 配置 DruidStatFilter
  #      web-stat-filter:
  #        enabled: true
  #        url-pattern: "/*"
  #        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
  #      # 配置 DruidStatViewServlet
  #      stat-view-servlet:
  #        url-pattern: "/druid/*"
  #        # IP 白名单(没有配置或者为空，则允许所有访问)
  #        allow: 127.0.0.1,192.168.163.1
  #        #  禁用 HTML 页面上的“Reset All”功能
  #        reset-enable: false
  #        # 登录名
  #        login-username: xinyu
  #        # 登录密码
  #        login-password: xinyu
  #  jpa:
  #    show-sql: true
  ##    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  #    hibernate:
  #      ddl-auto: update

  data:
    mongodb:
      host: 175.24.147.229
      port: 27018
      database: detection
      username: dev
      password: dev1119

# 日志文件位置
logging:
  file:
    path: "./logs/"

# 验证码相关信息
kaptcha:
  border:
    have: "no"
    color: white

  producer:
    impl: com.google.code.kaptcha.impl.DefaultKaptcha

  textproducer:
    impl: com.google.code.kaptcha.text.impl.DefaultTextCreator
    chars: # char
      length: 4
      space: 2
    font:
      color: 68,194,253
      size: 40
      names: Arial, Courier

  word:
    impl: com.google.code.kaptcha.text.impl.DefaultWordRenderer

  image:
    width: 150
    height: 50

  background:
    impl: com.google.code.kaptcha.impl.DefaultBackground
    clear:
      from: white
      to: white

  noise:
    color: 178,219,255
    impl: com.google.code.kaptcha.impl.DefaultNoise

  obscurificator:
    impl: com.google.code.kaptcha.impl.ShadowGimpy

  session:
    key: code
    date: date

websocket:
  uri: ws://116.62.63.164:35001/wsServices
#socket:
#  port: 23245
#  ip: 0.0.0.0